"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/tour";
exports.ids = ["pages/api/tour"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftour&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftour%2Findex.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftour&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftour%2Findex.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_tour_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/tour/index.js */ \"(api-node)/./src/pages/api/tour/index.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_tour_index_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_tour_index_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/tour\",\n        pathname: \"/api/tour\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _src_pages_api_tour_index_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGdG91ciZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnNyYyUyRnBhZ2VzJTJGYXBpJTJGdG91ciUyRmluZGV4LmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQzBEO0FBQzFEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx5REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMseURBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmMvcGFnZXMvYXBpL3RvdXIvaW5kZXguanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3RvdXJcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90b3VyXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJ1xuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftour&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftour%2Findex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./src/pages/api/tour/index.js":
/*!*************************************!*\
  !*** ./src/pages/api/tour/index.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _utils_dbConnect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/dbConnect */ \"(api-node)/./src/utils/dbConnect.js\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n// createTour API endpoint\n// POST request to create a new tour\n// Required fields: user_id, tour_name, city, artworks\n\n\nasync function handler(req, res) {\n    if (req.method === \"GET\") {\n        try {\n            // GET all tours\n            const { limit = 20, page = 1, city, visibility = \"public\" } = req.query;\n            const skip = (parseInt(page) - 1) * parseInt(limit);\n            const mongooseInstance = await (0,_utils_dbConnect__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n            const db = mongooseInstance.connection.db;\n            // Build query\n            const query = {};\n            if (city) {\n                query.city = city;\n            }\n            if (visibility) {\n                query.visibility = visibility;\n            }\n            // Get total count\n            const totalCount = await db.collection(\"tours\").countDocuments(query);\n            // Get tours with pagination\n            const tours = await db.collection(\"tours\").find(query).sort({\n                created_at: -1\n            }).skip(skip).limit(parseInt(limit)).toArray();\n            return res.status(200).json({\n                tours,\n                count: tours.length,\n                pagination: {\n                    total: totalCount,\n                    page: parseInt(page),\n                    limit: parseInt(limit),\n                    pages: Math.ceil(totalCount / parseInt(limit))\n                }\n            });\n        } catch (error) {\n            console.error(\"Error fetching tours:\", error);\n            return res.status(500).json({\n                error: error.message\n            });\n        }\n    } else if (req.method === \"POST\") {\n        try {\n            const { user_id, tour_name, city, description, artworks, visibility } = req.body;\n            console.log('[API] Creating tour with data:', {\n                user_id,\n                tour_name,\n                city,\n                artworksCount: artworks?.length || 0,\n                visibility\n            });\n            if (!user_id || !tour_name || !city || !artworks) {\n                return res.status(400).json({\n                    error: \"Missing required fields\"\n                });\n            }\n            // Establish connection and get the DB object\n            console.log('[API] Connecting to MongoDB for tour creation...');\n            const mongooseInstance = await (0,_utils_dbConnect__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n            const db = mongooseInstance.connection.db;\n            console.log('[API] Connected to database:', db.databaseName);\n            // Process artwork IDs to ensure they're valid\n            const processedArtworks = [];\n            // Check if artworks exist before creating the tour\n            for (const id of artworks){\n                // First try as string ID\n                let artwork = await db.collection(\"arts\").findOne({\n                    _id: id\n                });\n                // If not found and looks like ObjectId, try converting\n                if (!artwork && id.length === 24 && /^[0-9a-fA-F]{24}$/.test(id)) {\n                    try {\n                        const objectId = new mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId(id);\n                        artwork = await db.collection(\"arts\").findOne({\n                            _id: objectId\n                        });\n                        if (artwork) {\n                            processedArtworks.push(objectId);\n                            continue;\n                        }\n                    } catch (err) {\n                        console.warn(`Invalid artwork ID format: ${id}`);\n                    }\n                }\n                // If found as string, use as is\n                if (artwork) {\n                    processedArtworks.push(id);\n                }\n            }\n            if (processedArtworks.length === 0) {\n                return res.status(400).json({\n                    error: \"No valid artwork IDs provided\"\n                });\n            }\n            const newTour = {\n                user_id,\n                tour_name,\n                city,\n                description: description || \"\",\n                artworks: processedArtworks,\n                created_at: new Date(),\n                last_updated: new Date(),\n                visibility: visibility || \"public\"\n            };\n            console.log('[API] Saving new tour to database:', {\n                tourName: newTour.tour_name,\n                city: newTour.city,\n                artworksCount: newTour.artworks.length\n            });\n            const result = await db.collection(\"tours\").insertOne(newTour);\n            console.log('[API] Tour saved successfully with ID:', result.insertedId);\n            // Try to update user record if users collection exists\n            try {\n                const collections = await db.listCollections({\n                    name: \"users\"\n                }).toArray();\n                if (collections.length > 0) {\n                    // Update or create user record\n                    console.log('[API] Updating user record for user_id:', user_id);\n                    await db.collection(\"users\").updateOne({\n                        user_id: user_id\n                    }, {\n                        $addToSet: {\n                            created_tours: result.insertedId\n                        },\n                        $setOnInsert: {\n                            username: user_id,\n                            profile_created_at: new Date()\n                        }\n                    }, {\n                        upsert: true\n                    });\n                    console.log('[API] User record updated successfully');\n                }\n            } catch (userError) {\n                console.warn(\"Could not update user record:\", userError.message);\n            }\n            return res.status(201).json({\n                message: \"Tour created\",\n                tour: {\n                    ...newTour,\n                    _id: result.insertedId\n                }\n            });\n        } catch (error) {\n            console.error(\"Error creating tour:\", error);\n            return res.status(500).json({\n                error: error.message\n            });\n        }\n    } else {\n        res.setHeader(\"Allow\", [\n            \"GET\",\n            \"POST\"\n        ]);\n        return res.status(405).json({\n            error: `Method ${req.method} Not Allowed`\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/pages/api/tour/index.js\n");

/***/ }),

/***/ "(api-node)/./src/utils/dbConnect.js":
/*!********************************!*\
  !*** ./src/utils/dbConnect.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! url */ \"url\");\n// import mongoose from \"mongoose\";\n// import dotenv from \"dotenv\";\n// import path from \"path\";\n\n\n\n\n\ndotenv__WEBPACK_IMPORTED_MODULE_1__.config({\n    path: path__WEBPACK_IMPORTED_MODULE_2__.join((0,path__WEBPACK_IMPORTED_MODULE_2__.dirname)((0,url__WEBPACK_IMPORTED_MODULE_3__.fileURLToPath)(\"file:///Users/kobby/Desktop/cs430/Artivism/src/utils/dbConnect.js\")), \"..\", \"..\", \".env\")\n});\n// Get MongoDB URI and ensure it points to the correct database\nlet mongoUri = process.env.MONGO_URI;\nif (!mongoUri) {\n    throw new Error(\"Please define the MONGO_URI environment variable inside .env\");\n}\n// Make sure we're connecting to the 'artivism' database\nif (!mongoUri.includes('/artivism?') && !mongoUri.includes('/artivism/')) {\n    // Add the database name if it's not already in the URI\n    if (mongoUri.includes('/?')) {\n        // Replace the /? with /artivism?\n        mongoUri = mongoUri.replace('/?', '/artivism?');\n    } else if (mongoUri.includes('?')) {\n        // Insert database name before the query parameters\n        mongoUri = mongoUri.replace('?', '/artivism?');\n    } else {\n        // No query parameters, just add the database name\n        mongoUri = `${mongoUri}/artivism`;\n    }\n    console.log(\"Using artivism database\");\n}\nlet cachedMongoObject = global.mongoose;\nif (!cachedMongoObject) {\n    cachedMongoObject = global.mongoose = {\n        connection: null,\n        promise: null\n    };\n}\nasync function connectToDB() {\n    console.log(\"Connecting to DB\");\n    if (cachedMongoObject.connection) {\n        return cachedMongoObject.connection;\n    }\n    if (!cachedMongoObject.promise) {\n        const opts = {\n            bufferCommands: false\n        };\n        try {\n            cachedMongoObject.promise = mongoose__WEBPACK_IMPORTED_MODULE_0__.connect(mongoUri, opts).then((mongoose)=>{\n                return mongoose;\n            });\n            cachedMongoObject.connection = await cachedMongoObject.promise;\n            console.log(\"Success\");\n            return cachedMongoObject.connection;\n        } catch  {\n            throw new Error(\"No Connection\");\n        }\n    }\n}\n// Test\nif (\"file:///Users/kobby/Desktop/cs430/Artivism/src/utils/dbConnect.js\" === `file://${process.argv[1]}`) {\n    connectToDB().then(()=>{\n        console.log(\"Database connection successful\");\n        mongoose__WEBPACK_IMPORTED_MODULE_0__.connection.close(); // Close the connection after testing\n    }).catch((error)=>{\n        console.error(\"Database connection failed:\", error);\n    });\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectToDB);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy91dGlscy9kYkNvbm5lY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxtQ0FBbUM7QUFDbkMsK0JBQStCO0FBQy9CLDJCQUEyQjtBQUVLO0FBQ0o7QUFDSjtBQUNPO0FBQ0s7QUFFcENDLDBDQUFhLENBQUM7SUFDWkMsTUFBTUEsc0NBQVMsQ0FBQ0MsNkNBQU9BLENBQUNDLGtEQUFhQSxDQUFDLG1FQUFlLElBQUksTUFBTSxNQUFNO0FBQ3ZFO0FBRUEsK0RBQStEO0FBQy9ELElBQUlJLFdBQVdDLFFBQVFDLEdBQUcsQ0FBQ0MsU0FBUztBQUNwQyxJQUFJLENBQUNILFVBQVU7SUFDYixNQUFNLElBQUlJLE1BQ1I7QUFFSjtBQUVBLHdEQUF3RDtBQUN4RCxJQUFJLENBQUNKLFNBQVNLLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQ0wsU0FBU0ssUUFBUSxDQUFDLGVBQWU7SUFDeEUsdURBQXVEO0lBQ3ZELElBQUlMLFNBQVNLLFFBQVEsQ0FBQyxPQUFPO1FBQzNCLGlDQUFpQztRQUNqQ0wsV0FBV0EsU0FBU00sT0FBTyxDQUFDLE1BQU07SUFDcEMsT0FBTyxJQUFJTixTQUFTSyxRQUFRLENBQUMsTUFBTTtRQUNqQyxtREFBbUQ7UUFDbkRMLFdBQVdBLFNBQVNNLE9BQU8sQ0FBQyxLQUFLO0lBQ25DLE9BQU87UUFDTCxrREFBa0Q7UUFDbEROLFdBQVcsR0FBR0EsU0FBUyxTQUFTLENBQUM7SUFDbkM7SUFDQU8sUUFBUUMsR0FBRyxDQUFDO0FBQ2Q7QUFFQSxJQUFJQyxvQkFBb0JDLE9BQU9sQixRQUFRO0FBQ3ZDLElBQUksQ0FBQ2lCLG1CQUFtQjtJQUN0QkEsb0JBQW9CQyxPQUFPbEIsUUFBUSxHQUFHO1FBQUVtQixZQUFZO1FBQU1DLFNBQVM7SUFBSztBQUMxRTtBQUVBLGVBQWVDO0lBQ2JOLFFBQVFDLEdBQUcsQ0FBQztJQUNaLElBQUlDLGtCQUFrQkUsVUFBVSxFQUFFO1FBQ2hDLE9BQU9GLGtCQUFrQkUsVUFBVTtJQUNyQztJQUVBLElBQUksQ0FBQ0Ysa0JBQWtCRyxPQUFPLEVBQUU7UUFDOUIsTUFBTUUsT0FBTztZQUFFQyxnQkFBZ0I7UUFBTTtRQUNyQyxJQUFJO1lBQ0ZOLGtCQUFrQkcsT0FBTyxHQUFHcEIsNkNBQ2xCLENBQUNRLFVBQVVjLE1BQ2xCRyxJQUFJLENBQUMsQ0FBQ3pCO2dCQUNMLE9BQU9BO1lBQ1Q7WUFDRmlCLGtCQUFrQkUsVUFBVSxHQUFHLE1BQU1GLGtCQUFrQkcsT0FBTztZQUM5REwsUUFBUUMsR0FBRyxDQUFDO1lBQ1osT0FBT0Msa0JBQWtCRSxVQUFVO1FBQ3JDLEVBQUUsT0FBTTtZQUNOLE1BQU0sSUFBSVAsTUFBTTtRQUNsQjtJQUNGO0FBQ0Y7QUFFQSxPQUFPO0FBQ1AsSUFBSSxtRUFBZSxLQUFLLENBQUMsT0FBTyxFQUFFSCxRQUFRaUIsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ25ETCxjQUNHSSxJQUFJLENBQUM7UUFDSlYsUUFBUUMsR0FBRyxDQUFDO1FBQ1poQixnREFBbUIsQ0FBQzJCLEtBQUssSUFBSSxxQ0FBcUM7SUFDcEUsR0FDQ0MsS0FBSyxDQUFDLENBQUNDO1FBQ05kLFFBQVFjLEtBQUssQ0FBQywrQkFBK0JBO0lBQy9DO0FBQ0o7QUFFQSxpRUFBZVIsV0FBV0EsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2tvYmJ5L0Rlc2t0b3AvY3M0MzAvQXJ0aXZpc20vc3JjL3V0aWxzL2RiQ29ubmVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgbW9uZ29vc2UgZnJvbSBcIm1vbmdvb3NlXCI7XG4vLyBpbXBvcnQgZG90ZW52IGZyb20gXCJkb3RlbnZcIjtcbi8vIGltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCI7XG5cbmltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcbmltcG9ydCBkb3RlbnYgZnJvbSBcImRvdGVudlwiO1xuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjtcbmltcG9ydCB7IGRpcm5hbWUgfSBmcm9tIFwicGF0aFwiO1xuaW1wb3J0IHsgZmlsZVVSTFRvUGF0aCB9IGZyb20gXCJ1cmxcIjtcblxuZG90ZW52LmNvbmZpZyh7XG4gIHBhdGg6IHBhdGguam9pbihkaXJuYW1lKGZpbGVVUkxUb1BhdGgoaW1wb3J0Lm1ldGEudXJsKSksIFwiLi5cIiwgXCIuLlwiLCBcIi5lbnZcIiksXG59KTtcblxuLy8gR2V0IE1vbmdvREIgVVJJIGFuZCBlbnN1cmUgaXQgcG9pbnRzIHRvIHRoZSBjb3JyZWN0IGRhdGFiYXNlXG5sZXQgbW9uZ29VcmkgPSBwcm9jZXNzLmVudi5NT05HT19VUkk7XG5pZiAoIW1vbmdvVXJpKSB7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICBcIlBsZWFzZSBkZWZpbmUgdGhlIE1PTkdPX1VSSSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpbnNpZGUgLmVudlwiXG4gICk7XG59XG5cbi8vIE1ha2Ugc3VyZSB3ZSdyZSBjb25uZWN0aW5nIHRvIHRoZSAnYXJ0aXZpc20nIGRhdGFiYXNlXG5pZiAoIW1vbmdvVXJpLmluY2x1ZGVzKCcvYXJ0aXZpc20/JykgJiYgIW1vbmdvVXJpLmluY2x1ZGVzKCcvYXJ0aXZpc20vJykpIHtcbiAgLy8gQWRkIHRoZSBkYXRhYmFzZSBuYW1lIGlmIGl0J3Mgbm90IGFscmVhZHkgaW4gdGhlIFVSSVxuICBpZiAobW9uZ29VcmkuaW5jbHVkZXMoJy8/JykpIHtcbiAgICAvLyBSZXBsYWNlIHRoZSAvPyB3aXRoIC9hcnRpdmlzbT9cbiAgICBtb25nb1VyaSA9IG1vbmdvVXJpLnJlcGxhY2UoJy8/JywgJy9hcnRpdmlzbT8nKTtcbiAgfSBlbHNlIGlmIChtb25nb1VyaS5pbmNsdWRlcygnPycpKSB7XG4gICAgLy8gSW5zZXJ0IGRhdGFiYXNlIG5hbWUgYmVmb3JlIHRoZSBxdWVyeSBwYXJhbWV0ZXJzXG4gICAgbW9uZ29VcmkgPSBtb25nb1VyaS5yZXBsYWNlKCc/JywgJy9hcnRpdmlzbT8nKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBObyBxdWVyeSBwYXJhbWV0ZXJzLCBqdXN0IGFkZCB0aGUgZGF0YWJhc2UgbmFtZVxuICAgIG1vbmdvVXJpID0gYCR7bW9uZ29Vcml9L2FydGl2aXNtYDtcbiAgfVxuICBjb25zb2xlLmxvZyhcIlVzaW5nIGFydGl2aXNtIGRhdGFiYXNlXCIpO1xufVxuXG5sZXQgY2FjaGVkTW9uZ29PYmplY3QgPSBnbG9iYWwubW9uZ29vc2U7XG5pZiAoIWNhY2hlZE1vbmdvT2JqZWN0KSB7XG4gIGNhY2hlZE1vbmdvT2JqZWN0ID0gZ2xvYmFsLm1vbmdvb3NlID0geyBjb25uZWN0aW9uOiBudWxsLCBwcm9taXNlOiBudWxsIH07XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGNvbm5lY3RUb0RCKCkge1xuICBjb25zb2xlLmxvZyhcIkNvbm5lY3RpbmcgdG8gREJcIik7XG4gIGlmIChjYWNoZWRNb25nb09iamVjdC5jb25uZWN0aW9uKSB7XG4gICAgcmV0dXJuIGNhY2hlZE1vbmdvT2JqZWN0LmNvbm5lY3Rpb247XG4gIH1cblxuICBpZiAoIWNhY2hlZE1vbmdvT2JqZWN0LnByb21pc2UpIHtcbiAgICBjb25zdCBvcHRzID0geyBidWZmZXJDb21tYW5kczogZmFsc2UgfTtcbiAgICB0cnkge1xuICAgICAgY2FjaGVkTW9uZ29PYmplY3QucHJvbWlzZSA9IG1vbmdvb3NlXG4gICAgICAgIC5jb25uZWN0KG1vbmdvVXJpLCBvcHRzKVxuICAgICAgICAudGhlbigobW9uZ29vc2UpID0+IHtcbiAgICAgICAgICByZXR1cm4gbW9uZ29vc2U7XG4gICAgICAgIH0pO1xuICAgICAgY2FjaGVkTW9uZ29PYmplY3QuY29ubmVjdGlvbiA9IGF3YWl0IGNhY2hlZE1vbmdvT2JqZWN0LnByb21pc2U7XG4gICAgICBjb25zb2xlLmxvZyhcIlN1Y2Nlc3NcIik7XG4gICAgICByZXR1cm4gY2FjaGVkTW9uZ29PYmplY3QuY29ubmVjdGlvbjtcbiAgICB9IGNhdGNoIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIENvbm5lY3Rpb25cIik7XG4gICAgfVxuICB9XG59XG5cbi8vIFRlc3RcbmlmIChpbXBvcnQubWV0YS51cmwgPT09IGBmaWxlOi8vJHtwcm9jZXNzLmFyZ3ZbMV19YCkge1xuICBjb25uZWN0VG9EQigpXG4gICAgLnRoZW4oKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coXCJEYXRhYmFzZSBjb25uZWN0aW9uIHN1Y2Nlc3NmdWxcIik7XG4gICAgICBtb25nb29zZS5jb25uZWN0aW9uLmNsb3NlKCk7IC8vIENsb3NlIHRoZSBjb25uZWN0aW9uIGFmdGVyIHRlc3RpbmdcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJEYXRhYmFzZSBjb25uZWN0aW9uIGZhaWxlZDpcIiwgZXJyb3IpO1xuICAgIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0VG9EQjtcbiJdLCJuYW1lcyI6WyJtb25nb29zZSIsImRvdGVudiIsInBhdGgiLCJkaXJuYW1lIiwiZmlsZVVSTFRvUGF0aCIsImNvbmZpZyIsImpvaW4iLCJ1cmwiLCJtb25nb1VyaSIsInByb2Nlc3MiLCJlbnYiLCJNT05HT19VUkkiLCJFcnJvciIsImluY2x1ZGVzIiwicmVwbGFjZSIsImNvbnNvbGUiLCJsb2ciLCJjYWNoZWRNb25nb09iamVjdCIsImdsb2JhbCIsImNvbm5lY3Rpb24iLCJwcm9taXNlIiwiY29ubmVjdFRvREIiLCJvcHRzIiwiYnVmZmVyQ29tbWFuZHMiLCJjb25uZWN0IiwidGhlbiIsImFyZ3YiLCJjbG9zZSIsImNhdGNoIiwiZXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./src/utils/dbConnect.js\n");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftour&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftour%2Findex.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();