"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/tour";
exports.ids = ["pages/api/tour"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftour&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftour%2Findex.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftour&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftour%2Findex.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_tour_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/tour/index.js */ \"(api-node)/./src/pages/api/tour/index.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_tour_index_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_tour_index_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/tour\",\n        pathname: \"/api/tour\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _src_pages_api_tour_index_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGdG91ciZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnNyYyUyRnBhZ2VzJTJGYXBpJTJGdG91ciUyRmluZGV4LmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQzBEO0FBQzFEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx5REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMseURBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmMvcGFnZXMvYXBpL3RvdXIvaW5kZXguanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3RvdXJcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90b3VyXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJ1xuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftour&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftour%2Findex.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./src/pages/api/tour/index.js":
/*!*************************************!*\
  !*** ./src/pages/api/tour/index.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _utils_dbConnect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/dbConnect */ \"(api-node)/./src/utils/dbConnect.js\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n// createTour API endpoint\n// POST request to create a new tour\n// Required fields: user_id, tour_name, city, artworks\n\n\nasync function handler(req, res) {\n    if (req.method === \"GET\") {\n        try {\n            // GET all tours\n            const { limit = 20, page = 1, city, visibility = \"public\" } = req.query;\n            const skip = (parseInt(page) - 1) * parseInt(limit);\n            const mongooseInstance = await (0,_utils_dbConnect__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n            const db = mongooseInstance.connection.db;\n            // Build query\n            const query = {};\n            if (city) {\n                query.city = city;\n            }\n            if (visibility) {\n                query.visibility = visibility;\n            }\n            // Get total count\n            const totalCount = await db.collection(\"tours\").countDocuments(query);\n            // Get tours with pagination\n            const tours = await db.collection(\"tours\").find(query).sort({\n                created_at: -1\n            }).skip(skip).limit(parseInt(limit)).toArray();\n            return res.status(200).json({\n                tours,\n                count: tours.length,\n                pagination: {\n                    total: totalCount,\n                    page: parseInt(page),\n                    limit: parseInt(limit),\n                    pages: Math.ceil(totalCount / parseInt(limit))\n                }\n            });\n        } catch (error) {\n            console.error(\"Error fetching tours:\", error);\n            return res.status(500).json({\n                error: error.message\n            });\n        }\n    } else if (req.method === \"POST\") {\n        try {\n            const { user_id, tour_name, city, description, artworks, visibility } = req.body;\n            console.log('[API] Creating tour with data:', {\n                user_id,\n                tour_name,\n                city,\n                artworksCount: artworks?.length || 0,\n                visibility\n            });\n            if (!user_id || !tour_name || !city || !artworks) {\n                return res.status(400).json({\n                    error: \"Missing required fields\"\n                });\n            }\n            // Establish connection and get the DB object\n            console.log('[API] Connecting to MongoDB for tour creation...');\n            const mongooseInstance = await (0,_utils_dbConnect__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n            const db = mongooseInstance.connection.db;\n            console.log('[API] Connected to database:', db.databaseName);\n            // Process artwork IDs to ensure they're valid\n            const processedArtworks = [];\n            // Check if artworks exist before creating the tour\n            for (const id of artworks){\n                // First try as string ID\n                let artwork = await db.collection(\"arts\").findOne({\n                    _id: id\n                });\n                // If not found and looks like ObjectId, try converting\n                if (!artwork && id.length === 24 && /^[0-9a-fA-F]{24}$/.test(id)) {\n                    try {\n                        const objectId = new mongodb__WEBPACK_IMPORTED_MODULE_1__.ObjectId(id);\n                        artwork = await db.collection(\"arts\").findOne({\n                            _id: objectId\n                        });\n                        if (artwork) {\n                            processedArtworks.push(objectId);\n                            continue;\n                        }\n                    } catch (err) {\n                        console.warn(`Invalid artwork ID format: ${id}`);\n                    }\n                }\n                // If found as string, use as is\n                if (artwork) {\n                    processedArtworks.push(id);\n                }\n            }\n            if (processedArtworks.length === 0) {\n                return res.status(400).json({\n                    error: \"No valid artwork IDs provided\"\n                });\n            }\n            const newTour = {\n                user_id,\n                tour_name,\n                city,\n                description: description || \"\",\n                artworks: processedArtworks,\n                created_at: new Date(),\n                last_updated: new Date(),\n                visibility: visibility || \"public\"\n            };\n            console.log('[API] Saving new tour to database:', {\n                tourName: newTour.tour_name,\n                city: newTour.city,\n                artworksCount: newTour.artworks.length\n            });\n            const result = await db.collection(\"tours\").insertOne(newTour);\n            console.log('[API] Tour saved successfully with ID:', result.insertedId);\n            // Try to update user record if users collection exists\n            try {\n                const collections = await db.listCollections({\n                    name: \"users\"\n                }).toArray();\n                if (collections.length > 0) {\n                    // Update or create user record\n                    console.log('[API] Updating user record for user_id:', user_id);\n                    await db.collection(\"users\").updateOne({\n                        user_id: user_id\n                    }, {\n                        $addToSet: {\n                            created_tours: result.insertedId\n                        },\n                        $setOnInsert: {\n                            username: user_id,\n                            profile_created_at: new Date()\n                        }\n                    }, {\n                        upsert: true\n                    });\n                    console.log('[API] User record updated successfully');\n                }\n            } catch (userError) {\n                console.warn(\"Could not update user record:\", userError.message);\n            }\n            return res.status(201).json({\n                message: \"Tour created\",\n                tour: {\n                    ...newTour,\n                    _id: result.insertedId\n                }\n            });\n        } catch (error) {\n            console.error(\"Error creating tour:\", error);\n            return res.status(500).json({\n                error: error.message\n            });\n        }\n    } else {\n        res.setHeader(\"Allow\", [\n            \"GET\",\n            \"POST\"\n        ]);\n        return res.status(405).json({\n            error: `Method ${req.method} Not Allowed`\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/pages/api/tour/index.js\n");

/***/ }),

/***/ "(api-node)/./src/utils/dbConnect.js":
/*!********************************!*\
  !*** ./src/utils/dbConnect.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! url */ \"url\");\n/**\n * Database connection utility\n * \n * This module provides a cached connection to the MongoDB database.\n * It ensures that only one connection is created per Node.js instance.\n */ \n\n\n\n\n// Load environment variables\ndotenv__WEBPACK_IMPORTED_MODULE_1__.config({\n    path: path__WEBPACK_IMPORTED_MODULE_2__.join((0,path__WEBPACK_IMPORTED_MODULE_2__.dirname)((0,url__WEBPACK_IMPORTED_MODULE_3__.fileURLToPath)(\"file:///Users/truc/Documents/ArtivismA/src/utils/dbConnect.js\")), \"..\", \"..\", \".env\")\n});\n// Get MongoDB URI from environment variables\nconst mongoUri = process.env.MONGO_URI;\nconst dbName = process.env.MONGODB_DB_NAME || 'artivism';\nif (!mongoUri) {\n    throw new Error(\"Please define the MONGO_URI environment variable inside .env\");\n}\n// Use global MongoDB cached connection\nlet cachedMongoObject = global.mongoose;\nif (!cachedMongoObject) {\n    cachedMongoObject = global.mongoose = {\n        connection: null,\n        promise: null\n    };\n}\n/**\n * Connect to MongoDB with connection pooling\n * @returns {Promise<mongoose>} Mongoose connection\n */ async function connectToDB() {\n    if (cachedMongoObject.connection) {\n        return cachedMongoObject.connection;\n    }\n    if (!cachedMongoObject.promise) {\n        const opts = {\n            bufferCommands: false,\n            dbName: dbName\n        };\n        try {\n            cachedMongoObject.promise = mongoose__WEBPACK_IMPORTED_MODULE_0__.connect(mongoUri, opts).then((mongoose)=>{\n                return mongoose;\n            });\n            cachedMongoObject.connection = await cachedMongoObject.promise;\n            return cachedMongoObject.connection;\n        } catch (error) {\n            throw new Error(`Database connection failed: ${error.message}`);\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectToDB);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy91dGlscy9kYkNvbm5lY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUUrQjtBQUNKO0FBQ0o7QUFDTztBQUNLO0FBRXBDLDZCQUE2QjtBQUM3QkMsMENBQWEsQ0FBQztJQUNaQyxNQUFNQSxzQ0FBUyxDQUFDQyw2Q0FBT0EsQ0FBQ0Msa0RBQWFBLENBQUMsK0RBQWUsSUFBSSxNQUFNLE1BQU07QUFDdkU7QUFFQSw2Q0FBNkM7QUFDN0MsTUFBTUksV0FBV0MsUUFBUUMsR0FBRyxDQUFDQyxTQUFTO0FBQ3RDLE1BQU1DLFNBQVNILFFBQVFDLEdBQUcsQ0FBQ0csZUFBZSxJQUFJO0FBRTlDLElBQUksQ0FBQ0wsVUFBVTtJQUNiLE1BQU0sSUFBSU0sTUFDUjtBQUVKO0FBRUEsdUNBQXVDO0FBQ3ZDLElBQUlDLG9CQUFvQkMsT0FBT2hCLFFBQVE7QUFDdkMsSUFBSSxDQUFDZSxtQkFBbUI7SUFDdEJBLG9CQUFvQkMsT0FBT2hCLFFBQVEsR0FBRztRQUFFaUIsWUFBWTtRQUFNQyxTQUFTO0lBQUs7QUFDMUU7QUFFQTs7O0NBR0MsR0FDRCxlQUFlQztJQUNiLElBQUlKLGtCQUFrQkUsVUFBVSxFQUFFO1FBQ2hDLE9BQU9GLGtCQUFrQkUsVUFBVTtJQUNyQztJQUVBLElBQUksQ0FBQ0Ysa0JBQWtCRyxPQUFPLEVBQUU7UUFDOUIsTUFBTUUsT0FBTztZQUNYQyxnQkFBZ0I7WUFDaEJULFFBQVFBO1FBQ1Y7UUFDQSxJQUFJO1lBQ0ZHLGtCQUFrQkcsT0FBTyxHQUFHbEIsNkNBQ2xCLENBQUNRLFVBQVVZLE1BQ2xCRyxJQUFJLENBQUMsQ0FBQ3ZCO2dCQUNMLE9BQU9BO1lBQ1Q7WUFDRmUsa0JBQWtCRSxVQUFVLEdBQUcsTUFBTUYsa0JBQWtCRyxPQUFPO1lBQzlELE9BQU9ILGtCQUFrQkUsVUFBVTtRQUNyQyxFQUFFLE9BQU9PLE9BQU87WUFDZCxNQUFNLElBQUlWLE1BQU0sQ0FBQyw0QkFBNEIsRUFBRVUsTUFBTUMsT0FBTyxFQUFFO1FBQ2hFO0lBQ0Y7QUFDRjtBQUVBLGlFQUFlTixXQUFXQSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvdHJ1Yy9Eb2N1bWVudHMvQXJ0aXZpc21BL3NyYy91dGlscy9kYkNvbm5lY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEYXRhYmFzZSBjb25uZWN0aW9uIHV0aWxpdHlcbiAqIFxuICogVGhpcyBtb2R1bGUgcHJvdmlkZXMgYSBjYWNoZWQgY29ubmVjdGlvbiB0byB0aGUgTW9uZ29EQiBkYXRhYmFzZS5cbiAqIEl0IGVuc3VyZXMgdGhhdCBvbmx5IG9uZSBjb25uZWN0aW9uIGlzIGNyZWF0ZWQgcGVyIE5vZGUuanMgaW5zdGFuY2UuXG4gKi9cblxuaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xuaW1wb3J0IGRvdGVudiBmcm9tIFwiZG90ZW52XCI7XG5pbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiO1xuaW1wb3J0IHsgZGlybmFtZSB9IGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgeyBmaWxlVVJMVG9QYXRoIH0gZnJvbSBcInVybFwiO1xuXG4vLyBMb2FkIGVudmlyb25tZW50IHZhcmlhYmxlc1xuZG90ZW52LmNvbmZpZyh7XG4gIHBhdGg6IHBhdGguam9pbihkaXJuYW1lKGZpbGVVUkxUb1BhdGgoaW1wb3J0Lm1ldGEudXJsKSksIFwiLi5cIiwgXCIuLlwiLCBcIi5lbnZcIiksXG59KTtcblxuLy8gR2V0IE1vbmdvREIgVVJJIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzXG5jb25zdCBtb25nb1VyaSA9IHByb2Nlc3MuZW52Lk1PTkdPX1VSSTtcbmNvbnN0IGRiTmFtZSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfREJfTkFNRSB8fCAnYXJ0aXZpc20nO1xuXG5pZiAoIW1vbmdvVXJpKSB7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICBcIlBsZWFzZSBkZWZpbmUgdGhlIE1PTkdPX1VSSSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpbnNpZGUgLmVudlwiXG4gICk7XG59XG5cbi8vIFVzZSBnbG9iYWwgTW9uZ29EQiBjYWNoZWQgY29ubmVjdGlvblxubGV0IGNhY2hlZE1vbmdvT2JqZWN0ID0gZ2xvYmFsLm1vbmdvb3NlO1xuaWYgKCFjYWNoZWRNb25nb09iamVjdCkge1xuICBjYWNoZWRNb25nb09iamVjdCA9IGdsb2JhbC5tb25nb29zZSA9IHsgY29ubmVjdGlvbjogbnVsbCwgcHJvbWlzZTogbnVsbCB9O1xufVxuXG4vKipcbiAqIENvbm5lY3QgdG8gTW9uZ29EQiB3aXRoIGNvbm5lY3Rpb24gcG9vbGluZ1xuICogQHJldHVybnMge1Byb21pc2U8bW9uZ29vc2U+fSBNb25nb29zZSBjb25uZWN0aW9uXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNvbm5lY3RUb0RCKCkge1xuICBpZiAoY2FjaGVkTW9uZ29PYmplY3QuY29ubmVjdGlvbikge1xuICAgIHJldHVybiBjYWNoZWRNb25nb09iamVjdC5jb25uZWN0aW9uO1xuICB9XG5cbiAgaWYgKCFjYWNoZWRNb25nb09iamVjdC5wcm9taXNlKSB7XG4gICAgY29uc3Qgb3B0cyA9IHsgXG4gICAgICBidWZmZXJDb21tYW5kczogZmFsc2UsXG4gICAgICBkYk5hbWU6IGRiTmFtZVxuICAgIH07XG4gICAgdHJ5IHtcbiAgICAgIGNhY2hlZE1vbmdvT2JqZWN0LnByb21pc2UgPSBtb25nb29zZVxuICAgICAgICAuY29ubmVjdChtb25nb1VyaSwgb3B0cylcbiAgICAgICAgLnRoZW4oKG1vbmdvb3NlKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIG1vbmdvb3NlO1xuICAgICAgICB9KTtcbiAgICAgIGNhY2hlZE1vbmdvT2JqZWN0LmNvbm5lY3Rpb24gPSBhd2FpdCBjYWNoZWRNb25nb09iamVjdC5wcm9taXNlO1xuICAgICAgcmV0dXJuIGNhY2hlZE1vbmdvT2JqZWN0LmNvbm5lY3Rpb247XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRGF0YWJhc2UgY29ubmVjdGlvbiBmYWlsZWQ6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdFRvREI7XG4iXSwibmFtZXMiOlsibW9uZ29vc2UiLCJkb3RlbnYiLCJwYXRoIiwiZGlybmFtZSIsImZpbGVVUkxUb1BhdGgiLCJjb25maWciLCJqb2luIiwidXJsIiwibW9uZ29VcmkiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09fVVJJIiwiZGJOYW1lIiwiTU9OR09EQl9EQl9OQU1FIiwiRXJyb3IiLCJjYWNoZWRNb25nb09iamVjdCIsImdsb2JhbCIsImNvbm5lY3Rpb24iLCJwcm9taXNlIiwiY29ubmVjdFRvREIiLCJvcHRzIiwiYnVmZmVyQ29tbWFuZHMiLCJjb25uZWN0IiwidGhlbiIsImVycm9yIiwibWVzc2FnZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./src/utils/dbConnect.js\n");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Ftour&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Ftour%2Findex.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();